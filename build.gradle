defaultTasks 'clean', 'build', 'javadoc'

description = 'An optimizing and stacking tool for Scalable Vector Graphics.'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath group: 'com.github.ben-manes', name: 'gradle-versions-plugin', version: '0.12.0'
        classpath group: 'net.researchgate', name: 'gradle-release', version: '2.4.0'
    }
}

apply plugin: 'base'
apply plugin: 'wrapper'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'net.researchgate.release'

wrapper {
    gradleVersion = '2.13'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

ext {
    gradleDir = "$rootDir/gradle"

    deps = [
        apiviz : dependencies.create('com.grahamedgecombe.apiviz:apiviz:1.3.3'),
        junit  : dependencies.create('junit:junit:4.12'),
        groovy : dependencies.create('org.codehaus.groovy:groovy-all:2.4.6'),
        guava  : dependencies.create('com.google.guava:guava:19.0'),
        mockito: dependencies.create('org.mockito:mockito-core:1.10.19'),
        slf4j  : [
            dependencies.create('org.slf4j:slf4j-api:1.7.21'),
            dependencies.create('org.slf4j:slf4j-jdk14:1.7.21'),
        ]
    ]
}


dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { selection ->
            def rejected = [ 'alpha', 'beta', 'rc', 'cr', 'm' ].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }

            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
