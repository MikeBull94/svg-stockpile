plugins {
    id 'com.github.ben-manes.versions' version '0.12.0'
    id 'io.spring.dependency-management' version '0.5.6.RELEASE'
}

defaultTasks 'clean', 'build', 'aggregateJavadoc'

apply plugin: 'base'
apply plugin: 'wrapper'
apply plugin: 'com.github.ben-manes.versions'

wrapper {
    gradleVersion = '2.11'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { selection ->
            def rejected = [ 'alpha', 'beta', 'rc', 'cr', 'm' ].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }

            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

allprojects {
    apply plugin: 'io.spring.dependency-management'

    group = 'com.mikebull94'
    version = '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        dependencies {
            dependency group: 'com.google.guava', name: 'guava', version: '19.0'
            dependency group: 'junit', name: 'junit', version: '4.12'
            dependency group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
            dependencySet(group: 'org.slf4j', version: '1.7.18') {
                entry 'slf4j-api'
                entry 'slf4j-jdk14'
            }
        }
    }
}

configurations {
    doclet
}

dependencies {
    doclet group: 'com.grahamedgecombe.apiviz', name: 'apiviz', version: '1.3.3'
}

gradle.projectsEvaluated {
    tasks.create(name: 'aggregateJavadoc', type: Javadoc) {
        group = JavaBasePlugin.DOCUMENTATION_GROUP
        description = 'Generates aggregated Javadoc API documentation for the main source code of all sub-projects.'

        doFirst {
            subprojects.each { project ->
                project.sourceSets.main.output.each { dir ->
                    dir.mkdirs()
                }
            }
        }

        title = 'svg4j'
        source = subprojects.javadoc.source
        classpath = files(subprojects.javadoc.classpath)
        destinationDir = file("$buildDir/docs/javadoc")

        options {
            doclet = 'org.jboss.apiviz.APIviz'
            docletpath = configurations.doclet.files.asType(List)

            addStringOption('sourceclasspath', files(subprojects.collect {
                it.sourceSets.main.output
            }).asPath)
            addBooleanOption('nopackagediagram', true)

            showAll()
            links 'https://docs.oracle.com/javase/8/docs/api/'
            links 'http://www.slf4j.org/api/'

            def guavaVersion = dependencyManagement.managedVersions.get('com.google.guava:guava')
            links "https://google.github.io/guava/releases/$guavaVersion/api/docs/"
        }
    }
}
