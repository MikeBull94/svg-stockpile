defaultTasks 'clean', 'build', 'javadoc'

description = 'An optimizing and stacking tool for Scalable Vector Graphics.'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath group: 'com.github.ben-manes', name: 'gradle-versions-plugin', version: '0.12.0'
        classpath group: 'net.researchgate', name: 'gradle-release', version: '2.3.5'
    }
}

apply plugin: 'base'
apply plugin: 'wrapper'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'net.researchgate.release'

wrapper {
    gradleVersion = '2.12'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

ext.deps = [
    'guava'      : dependencies.create(group: 'com.google.guava', name: 'guava', version: '19.0'),
    'apiviz'     : dependencies.create(group: 'com.grahamedgecombe.apiviz', name: 'apiviz', version: '1.3.3'),
    'slf4j-api'  : dependencies.create(group: 'org.slf4j', name: 'slf4j-api', version: '1.7.19'),
    'slf4j-jdk14': dependencies.create(group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.19'),
    'junit'      : dependencies.create(group: 'junit', name: 'junit', version: '4.12'),
    'mockito'    : dependencies.create(group: 'org.mockito', name: 'mockito-core', version: '1.10.19'),
    'groovy-all' : dependencies.create(group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.6')
]

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { selection ->
            def rejected = [ 'alpha', 'beta', 'rc', 'cr', 'm' ].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }

            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

release {
    failOnSnapshotDependencies = false
}
