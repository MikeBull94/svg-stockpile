/**
 * Provides a Java build environment with common dependencies and Javadoc + sources artifacts when applied to any project.
 */

apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
    doclet {
        description = 'Configuration for doclet artifacts.'
    }
}

dependencies {
    doclet group: 'com.grahamedgecombe.apiviz', name: 'apiviz'
    compile group: 'com.google.guava', name: 'guava'
    compile group: 'org.slf4j', name: 'slf4j-api'
    compile group: 'org.slf4j', name: 'slf4j-jdk14'
    testCompile group: 'junit', name: 'junit'
    testCompile group: 'org.mockito', name: 'mockito-core'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

javadoc {
    doFirst {
        sourceSets.main.output.each { dir ->
            dir.mkdirs()
        }
    }

    title = "$rootProject.name/$project.name $project.version"

    options {
        doclet = 'org.jboss.apiviz.APIviz'
        docletpath = configurations.doclet.files.asType(List)

        addBooleanOption('nopackagediagram', true)
        addStringOption('sourceclasspath', files(sourceSets.main.output).asPath)

        showAll()
        links 'https://docs.oracle.com/javase/8/docs/api/'
        links 'http://www.slf4j.org/api/'
        links "https://google.github.io/guava/releases/${versions['com.google.guava:guava']}/api/docs/"
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    group = LifecycleBasePlugin.BUILD_GROUP
    description = 'Assembles a jar archive containing the Javadoc API documentation.'
    classifier = 'javadoc'
    from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    group = LifecycleBasePlugin.BUILD_GROUP
    description = 'Assembles a jar archive containing the main classes with sources.'
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
