<?xml version="1.0"?>
<ruleset name="Custom ruleset"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

    <!-- Rule descriptions found at: https://pmd.github.io/pmd-5.4.0/pmd-java/rules/index.html -->

    <!-- Contains a collection of good practices which should be followed. -->
    <rule ref="rulesets/java/basic.xml" />

    <!-- Contains rules regarding the use and placement of braces. -->
    <rule ref="rulesets/java/braces.xml" />

    <!-- Find questionable usages of the clone() method. -->
    <rule ref="rulesets/java/clone.xml" />

    <!-- Contains rules that find problems related to code size or complexity. -->
    <rule ref="rulesets/java/codesize.xml" />

    <!-- Contains rules that find problems related to code size or complexity. -->
    <rule ref="rulesets/java/controversial.xml">
        <exclude name="OnlyOneReturn" />
        <exclude name="AssignmentInOperand" />
        <exclude name="AtLeastOneConstructor" />
        <exclude name="CallSuperInConstructor" />
        <exclude name="DataflowAnomalyAnalysis" />
        <exclude name="OneDeclarationPerLine" />
        <exclude name="AvoidPrefixingMethodParameters" />
        <exclude name="UseObjectForClearerAPI" />
        <exclude name="UseConcurrentHashMap" />
    </rule>

    <!-- Allow literals that check for values of -1, 0, and 1. -->
    <rule ref="rulesets/java/controversial.xml/AvoidLiteralsInIfCondition">
        <properties>
            <property name="ignoreMagicNumbers" value="-1,0,1" />
        </properties>
    </rule>

    <!-- Contains rules that flag suboptimal code implementations. Alternate approaches are suggested. -->
    <rule ref="rulesets/java/design.xml">
        <exclude name="SwitchStmtsShouldHaveDefault" />
        <exclude name="FieldDeclarationsShouldBeAtStartOfClass" />
    </rule>

    <!-- Allow negation within an "if" expression with an "else" clause if it has an "else-if" case. -->
    <rule ref="rulesets/java/design.xml/ConfusingTernary">
        <properties>
            <property name="ignoreElseIf" value="true" />
        </properties>
    </rule>

    <!-- Contains rules that find empty statements of any kind (empty method, empty block statement, empty try or catch block,â€¦). -->
    <rule ref="rulesets/java/empty.xml" />

    <!-- Allow empty catch blocks only if they have a comment inside of them. -->
    <rule ref="rulesets/java/empty.xml/EmptyCatchBlock">
        <properties>
            <property name="allowCommentedBlocks" value="true" />
        </properties>
    </rule>

    <!-- These rules deal with different problems that can occur with finalizers. -->
    <rule ref="rulesets/java/finalizers.xml" />

    <!-- These rules deal with different problems that can occur with import statements. -->
    <rule ref="rulesets/java/imports.xml">
        <exclude name="TooManyStaticImports" />
    </rule>

    <!-- The JavaBeans Ruleset catches instances of bean rules not being followed. -->
    <rule ref="rulesets/java/javabeans.xml">
        <exclude name="BeanMembersShouldSerialize" />
    </rule>

    <!-- These rules deal with different problems that can occur with JUnit tests. -->
    <rule ref="rulesets/java/junit.xml">
        <exclude name="JUnitTestContainsTooManyAsserts" />
    </rule>

    <!-- Contains a collection of rules that find questionable usages of the logger. -->
    <rule ref="rulesets/java/logging-java.xml">
        <exclude name="GuardLogStatementJavaUtil" />
    </rule>

    <!-- Contains rules regarding preferred usage of names and identifiers. -->
    <rule ref="rulesets/java/naming.xml">
        <exclude name="ShortVariable" />
        <exclude name="VariableNamingConventions" />
    </rule>

    <!-- Set the maximum length of a variable name to 20 characters. -->
    <rule ref="rulesets/java/naming.xml/LongVariable">
        <properties>
            <property name="minimum" value="20" />
        </properties>
    </rule>

    <!-- Set the minimum length of a class name to 4 characters. -->
    <rule ref="rulesets/java/naming.xml/ShortClassName">
        <properties>
            <property name="minimum" value="4" />
        </properties>
    </rule>

    <!-- These rules deal with different optimizations that generally apply to best practices. -->
    <rule ref="rulesets/java/optimizations.xml">
        <exclude name="LocalVariableCouldBeFinal" />
        <exclude name="MethodArgumentCouldBeFinal" />
        <exclude name="UseStringBufferForStringAppends" />
    </rule>

    <!-- These rules provide some strict guidelines about throwing and catching exceptions. -->
    <rule ref="rulesets/java/strictexception.xml">
        <exclude name="AvoidCatchingThrowable" />
        <exclude name="SignatureDeclareThrowsException" />
    </rule>

    <!-- These rules deal with different issues that can arise with manipulation of the String, StringBuffer, or StringBuilder instances. -->
    <rule ref="rulesets/java/strings.xml">
        <exclude name="AvoidDuplicateLiterals" />
    </rule>

    <!-- These rules check the security guidelines from Sun, published at http://java.sun.com/security/seccodeguide.html#gcg -->
    <rule ref="rulesets/java/sunsecure.xml" />

    <!-- These are rules which resolve java Class files for comparison, as opposed to a String. -->
    <rule ref="rulesets/java/typeresolution.xml" />

    <!-- The Unnecessary Ruleset contains a collection of rules for unnecessary code. -->
    <rule ref="rulesets/java/unnecessary.xml" />

    <!-- The Unused Code ruleset contains rules that find unused or ineffective code. -->
    <rule ref="rulesets/java/unusedcode.xml" />

</ruleset>
